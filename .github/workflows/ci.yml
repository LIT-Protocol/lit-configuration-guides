name: "Dependency Bot"
on:
  repository_dispatch:
    types:
      - dependency_update
  push:
    branches:
      - main
      - "**"

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies (for `jq`)
        run: sudo apt-get install jq

      # Fetch the labels from the event payload
      - name: Check for update label
        id: label-check
        run: |
          # List of supported labels
          SUPPORTED_LABELS=("alpha" "beta" "latest")

          # Extract the labels from the event payload
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            LABELS=$(jq -r '.pull_request.labels[].name' <<< '${{ toJson(github.event) }}')
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            LABELS=$(jq -r '.client_payload.labels[]' <<< '${{ toJson(github.event) }}')
          else
            LABELS=""
          fi

          # Default to "none" if no matching label is found
          MATCHED_LABEL="none"

          # Check if one of the supported labels is present
          for label in $LABELS; do
            for supported_label in "${SUPPORTED_LABELS[@]}"; do
              if [[ "$label" == "$supported_label" ]]; then
                MATCHED_LABEL=$label
                break 2
              fi
            done
          done

          echo "Matched Label: $MATCHED_LABEL"

          # Output the matched label
          echo "matched_label=$MATCHED_LABEL" >> $GITHUB_ENV

      # Conditionally run the dependency update based on the label
      - name: Update dependencies if label matches
        if: env.matched_label != 'none'
        run: |
          if [[ "${{ env.matched_label }}" != "none" ]]; then
            yarn workspace lit-client-setup upgrade @lit-protocol/lit-node-client@${{ env.matched_label }}
            # Get the version of the updated package from the package.json
            VERSION=$(jq -r '.dependencies["@lit-protocol/lit-node-client"]' < apps/lit-client-setup/package.json)
            echo "package_version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "No matching label found for upgrade."
          fi

      # Create a pull request after dependencies are updated
      - name: Create Pull Request
        if: env.matched_label != 'none'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies for ${{ env.matched_label }} label to version ${{ steps.update-dependencies.outputs.package_version }}"
          branch: "update/dependencies-${{ env.matched_label }}-${{ steps.update-dependencies.outputs.package_version }}"
          title: "[tag::${{ env.matched_label }}] Update dependencies to version ${{ steps.update-dependencies.outputs.package_version }}"
          body: "This pull request updates dependencies for the ${{ env.matched_label }} tag to version ${{ steps.update-dependencies.outputs.package_version }}."
          labels: ${{ env.matched_label }}
