name: "Dependency Bot"
on:
  repository_dispatch:
    types: [dependency_update]
  push:
  branches:
    - ci/auto-pub
    - main
    - master

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Check for update label from client payload using GitHub's native `fromJSON`
      - name: Check for update label
        id: label-check
        run: |
          # List of supported labels
          SUPPORTED_LABELS=("alpha" "beta" "latest")

          # Convert JSON from client_payload to GitHub Actions format
          LABELS=$(echo '${{ toJson(github.event.client_payload.labels) }}')

          # Default to "none" if no matching label is found
          MATCHED_LABEL="none"

          # Iterate over the supported labels and find a match
          for label in "${LABELS[@]}"; do
            for supported_label in "${SUPPORTED_LABELS[@]}"; do
              if [[ "$label" == "$supported_label" ]]; then
                MATCHED_LABEL=$label
                break 2
              fi
            done
          done

          echo "Matched Label: $MATCHED_LABEL"

          # Set output with the matched label
          echo "matched_label=$MATCHED_LABEL" >> $GITHUB_ENV

      # Conditionally run the dependency update based on the label
      - name: Update dependencies if label matches
        if: env.matched_label != 'none'
        run: |
          case "${{ env.matched_label }}" in
            alpha)
              yarn workspace lit-client-setup upgrade @lit-protocol/lit-node-client@alpha
              ;;
            beta)
              yarn workspace lit-client-setup upgrade @lit-protocol/lit-node-client@beta
              ;;
            latest)
              yarn workspace lit-client-setup upgrade @lit-protocol/lit-node-client@latest
              ;;
            *)
              echo "No matching label found for upgrade."
              ;;
          esac
